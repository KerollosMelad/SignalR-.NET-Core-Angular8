using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.SignalR;
using RealTimeCharts_Server.DataStorage;
using RealTimeCharts_Server.HubConfig;
using RealTimeCharts_Server.TimerFeatures;

namespace RealTimeCharts_Server.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class ChartController : ControllerBase
    {
        private readonly IHubContext<ChartHub> _hub;

        public ChartController(IHubContext<ChartHub> hub)
        {
            _hub = hub;
        }

        public IActionResult Get()
        {
            //we are sending generated data to all subscribed clients on the transferchartdata event.
            //This means that every client if it has a listener on the transferchartdata event,
            // will receive a data generated by the DataManager class.
            var timerManager = new TimerManager(
                () => _hub.Clients.All.SendAsync(
                    "transferchartdata",                    // this method in client => and the server will execute it every 2 sec
                    DataManager.GetData())                   // the data that generated random from dataManager => will pass as arg. to transferchartdata() method
            );

            return Ok(new { Message = "Request Completed" });
        }
    }
}